why the lucky stiff (or _why) was a Ruby programmer who made a name for himself through a number of artistic creations with and for Ruby. It really is a fascinating story, but it is also a story of somebody who wanted privacy. When people found out his real name, many personal details were leaked to the Internet. One day, _why deactivated all of his online presence; he just disappeared.

After starting wrap my head around what he has done, it is a real loss that _why is no longer contributing to the Ruby community. His greatest contribution, in my mind at least, is Hackety Hack. _why wanted to make programming more accessible, so he developed a single download that would install Ruby onto your computer. This is no small feat, especially if you run Windows. Better still, _why distilled everything that a novice would need into a dead simple program. Documentation is to the right of the interpreter. You do not have to navigate the file system to open or save programs. You do not even have to add the ".rb" file extension when saving. Hackety Hack just handled all of that stuff for you. _why understood the need for collaboration, so he made it possible to share code to other Hackety Hack users. He reimplemented Papert's turtle art so that kids were not just writing to the console or sending popups to the screen. incredibly, _why wrote his own GUI library called Shoes. In this way, kids could create something "tangible."

_why may have been a teacher, or maybe he just was a programmer at some nondescript company. Regardless, he showed remarkable insight to understanding how to make something for kids. Each December, my Twitter timeline is filled with education technology people excited for Hour of Code. In place of all of promotion from tech companies and celebrities, I wish everybody would watch _why's 2009 talk at the ART && CODE Symposium. Pay particular attention to the video clip of a kid reviewing how to get started with C++. _why understood the problem at hand; tools for adults can be just as compelling when in the hands of kids, but these tools need not be so complex as to be only understood by adults. _why had the right idea, give kids something powerful (Ruby), and give it to them in a way such that learning and creating are rewarding and fun.

I hope that, wherever he is, _why is still searching for new ways to make coding fun and accessible for kids.