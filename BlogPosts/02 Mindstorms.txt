I heard that Papert's book, Mindstorms: Children, Computers, and Powerful Ideas, is a must read. I could not agree more, but what really struck me is how the book (written over thirty years ago) reads as though it was created with the current environment in mind. Papert warned of using computers as an updated version of worksheets. At a recent EdTech conference, I was amazed at the number of iPad apps and web services which require no creative input from the students. It is more of the same, ask a question and give a response. If you dress it up with sounds, colors, and animations and people think the learning is suddenly interactive. Papert wholeheartedly disagrees. The LOGO programming language allows students to relate to coding through simple syntax, the turtle, and the ability to debug programs by walking through the program.

The above is by no means a proper review of Papert's book. What I wrote is highly reductive. If you are interested in kids, computers, and learning (and not just programming) I recommend you read the book. I do see some of Papert's ideas in Elm. Elm is a web language, and when you compare it to traditional HTML/CSS/JS, the syntax is much easier to read. Plus there are no curly brackets. Instead of a turtle, Elm creates a website or web app. Kids use the web all the time. Either they visit a site directly or use a service that depends on the web. They understand the web (in a very limited fashion) because it has always been there. Elm can also give immediate feedback through the online editor. The nature of Elm is such that students cannot use their bodies to provide a concrete reference point to debug their program. Elm does have a time traveling debugger, which was inspired from the ideas of Bret Victor (more on him in another post).