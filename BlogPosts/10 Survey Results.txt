At my first meeting with other professors and capstone students, one of the professors suggested I survey my Sixth Grade students to see which of their needs were being met by Khan Academy’s Java Script course and which were not. I made a quick survey. The questions and a summation of the results are as follows:

Khan Academy provides several tools (videos, pop-ups, hints, etc.) to help you understand programming. Which of these do you find the most helpful? Why?
What concepts about programming do you find the most difficult to understand? Why?
In what ways do the tools provided by Khan Academy fail to help you to understand programming?
Q1: Helpful tools

Unsurprisingly, the videos were selected as the most valuable tool. Really, the videos are a thing of beauty. In addition to all of the normal benefits of video (pause, rewind, listen again and again, etc.), the Khan Academy videos allow the user to pause the video, and then edit the code. The output window will update the new code on the fly. This is amazing. Not only does the video teach new concepts, students can immediately play with the code instead of waiting for the video to conclude. When the student is done making their own edits, they click play and the video resumes. It truly is brilliant. Making an interactive video, however, is something that is outside the scope of the project. I do not have the time or skills to make similar video tutorials. However, if you want to teach coding through videos, Khan Academy has set the standard.

The next most helpful tool are the pop-ups that provide instant feedback when you forget syntactic errors like a semicolon. The hints provided for each step of the challenges (student work). Each step has a short description of what to do next. If students struggle with how the code should look, the hints set the students on the right path. The last two helpful tools tied for the fewest votes are documentation and autocomplete. I have found that getting students (not just Sixth Grade students) to read webpages for research is difficult. They scan instead of read, so they do not make connections between the text on the screen and the problem they are trying to solve. Thus I am not that surprised to see that many people do not find the documentation to be all that helpful. I was a bit surprised to see that not many people appreciated the autocomplete and formatting to be useful. It is easy to forget the closing parenthesis or curly bracket, and it is nice that the computer tries to help them out.

Q2: Difficult Concepts

By far, the most difficult concept for my students is animation [1]. I suspect that many students are conflating animation with variables, since they need to make use of variables to have something move across the screen. There are other ideas like conditionals, using negative numbers (something the students do not learn until Seventh Grade) to change direction, the draw loop, and the like. The second most difficult concept are variables. I waited until all of the students had finished the variable lessons on Khan Academy before beginning the animation project. It is clear, however, that some students need more work with variables that go above and beyond what Khan Academy offers. The two other concepts which received a couple of votes were keyPressed (this is an advanced student since this was never covered or required) and loops. They did not explain if they are talking about for-loops or the draw loop. 

Q3: Failure of the Tools

These responses are the most interesting. When compiling the responses to this questions, I tried to distill their opinions into more general ideas. I think it is worthwhile to take a look at each idea. The list below goes from most popular response to the least popular.

Point out the error, but doesn’t provide understanding - This idea, I believe, is the fundamental problem I face. Each student has their own learning style. The job of the educator is to figure out how each student thinks and understands, and then they package the material in such a way the student can comprehend the lesson. Computers do not understand my students, at all. The best the computer can do is preface the lessons with video tutorials, and then provide feedback when appropriate. The hope is that these tools are easy enough to understand. The computer cannot get to truly know each student and their individual modes of learning [2].
Pop-ups are annoying - Agree. The website cannot determine if I stopped typing because I am thinking, scratching my head, or because I believe the code is correct. So whenever there is a pause and there is an error, Khan Academy has a pop-up appear to remind the user of the mistake. When student make a mistake, they respond positively to the feedback. However, when they have not finished typing, the become frustrated. Coding is frustrating enough as it is. The added frustration could negatively impact a student’s desire to continue coding for the remainder of class. It is a difficult balance to strike. Students need the feedback, but they do not need to be annoyed.
Error messages are not clear - Certain messages, like a missing semicolon, are easy to understand. But there are certain errors that throw a confounding message on the screen. To be honest, there are some messages I do not fully understand. This is mostly because the website has a complete understanding of JavaScript, but it does not know the scope of knowledge that my students have. So you can get a message like, “Was expecting [something technical] but received [something else technical].” I see these kinds of messages when student declare variables. It would be more helpful if the website understood that the error message should be stated in terms of variable declarations and not some more advanced topic.
Not a lot of Detail - A good example of this is when a curly bracket is missing. When students click on the “show me” link in the pop-up, the computer will take you to the very first open curly bracket of the draw loop. On a few occasions, students will immediately close the draw loop with a curly bracket. This will satisfy the error checking feature of Khan Academy, but now all of the student’s code resides outside of the draw loop, and there is no output. Other students will go to the end of the program and another curly bracket to the list of closing curly brackets. Again, this will satisfy the error checking, but it does not guarantee the output will be correct. To truly solve the problem, you need to read through the code to figure out where the curly bracket really goes. Students want to know why the computer cannot take them to where the problem actually resides. The computer does not understand the context in which the code was written. Humans do a better job of providing this context, and thus can do a better job of fixing the problem.
No Tool Helps with Larger Concepts - Khan Academy error checking does a good job of helping you with the syntax of your code. But what about when the syntax is correct, and it is the output that is the problem? Student projects do not always align with the video lessons. So when their code has no errors, but does not have the correct output, the students do not have the tools on Khan Academy to help them troubleshoot the issue. Students feel stuck. Because the scope of the variety of student projects, they need a human to understand the goal of the project and provide context to the code. Then the student can be helped. Eventually, the student needs to learn how to do this for themselves, but until they do students will remain stuck if their syntax is correct but the output is wrong.
Trouble Submitting Online - A downside of an online approach is when connectivity is not ideal. It is not uncommon to hear students complain of the inability to turn in work to Khan Academy because of the high number of users. 
Videos Cannot Answer Your Questions - Video tutorials can be a useful instructional tool, but they are not perfect. What happens when a student does not fully understand? How does the video address their specific question? A student can replay a video, which is useful, but videos do not change their approach. If the approach is not successful for that particular student, no amount of replays will change this. The student needs a new approach.
Everything has to be so Exact - This is most likely due to JavaScript’s syntax. Languages like Ruby have a syntax that beginners might find preferable.  
Final Thoughts

My capstone needs a clearly defined scope; the narrower the better. As Khan Academy provides an open platform for coding anything a user wants. As such, this is why so much confusion abounds. By restricting what a student codes, context for the problem at hand will be easier to provide. Also, I need to seriously consider adding some video to the capstone. Students seem to respond well to them, but they will never be as good as the Khan Academy videos.

[1] Animation is not really a concept in and of itself. It the collection of concepts to a specific end. Students struggle with animation because the assignment I introduced was too aggressive for this point in the school year. I should have waited a bit longer before asking them to make an animation. 

[2] Lest you think that I am implying that computers are inferior to humans, that they cannot replace a human, or that education will suffer if we rely on computer to educate children - I am not. For all of the time I get to spend with my students, I sometimes have trouble adapting the lesson to meet their needs. Teaching is no easy feat for computers or humans. 